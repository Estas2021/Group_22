{
	"info": {
		"_postman_id": "e03695ed-f7f1-4101-a67d-7dbd635d17f7",
		"name": "HomeWork2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// http://162.55.220.72:5005/first\r",
							"// 1. Отправить запрос.\r",
							"// 2. Статус код 200\r",
							"// 3. Проверить, что в body приходит правильный string.\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"This is the first responce from server!\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// http://162.55.220.72:5005/user_info_3\r",
							"// 1. Отправить запрос.\r",
							"// 2. Статус код 200\r",
							"// 3. Спарсить response body в json.\r",
							"// 4. Проверить, что name в ответе равно name s request (name вбить руками.)\r",
							"// 5. Проверить, что age в ответе равно age s request (age вбить руками.)\r",
							"// 6. Проверить, что salary в ответе равно salary s request (salary вбить руками.)\r",
							"// 7. Спарсить request.\r",
							"// 8. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"// 9. Проверить, что age в ответе равно ages request (age забрать из request.)\r",
							"// 10. Проверить, что salary в ответе равно salary s request(salary забрать из request.)\r",
							"// 11. Вывести в консоль параметр family из response.\r",
							"// 12. Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)\r",
							"\r",
							"const response = pm.response.json();\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let name_request = request.data.name;\r",
							"let name_response = response.name;\r",
							"\r",
							"pm.test(\"Check name_request = name_response\", function () {\r",
							"    pm.expect(name_request).to.eql(name_response);\r",
							"});\r",
							"\r",
							"let age_request = request.data.age;\r",
							"let age_response = response.age;\r",
							"// console.log(age_response, age_request);\r",
							"\r",
							"pm.test(\"Check age_request = age_response\", function () {\r",
							"    pm.expect(age_request).to.eql(age_response);\r",
							"});\r",
							"\r",
							"let salary_request = +request.data.salary;\r",
							"let salary_response = response.salary;\r",
							"// console.log(salary_request, salary_response);\r",
							"\r",
							"pm.test(\"Check salary_request = salary_response\", function () {\r",
							"    pm.expect(salary_request).to.eql(salary_response);\r",
							"});\r",
							"\r",
							"let requestData = request.data; \r",
							"// console.log(typeof requestData);\r",
							"\r",
							"let name = requestData.name;\r",
							"let name_resp = response.name;\r",
							"// console.log(name, name_resp);\r",
							"\r",
							"pm.test(\"Check name = name_resp\", function () {\r",
							"    pm.expect(name).to.eql(name_resp);\r",
							"});\r",
							"\r",
							"let age = requestData.age;\r",
							"let age_resp = response.age;\r",
							"// console.log(age, age_resp);\r",
							"\r",
							"pm.test(\"Check age = age_resp\", function () {\r",
							"    pm.expect(age).to.eql(age_resp);\r",
							"});\r",
							"\r",
							"let salary = +requestData.salary;\r",
							"let salary_resp = response.salary;\r",
							"// console.log(salary, salary_resp);\r",
							"\r",
							"pm.test(\"Check salary = salary_resp\", function () {\r",
							"    pm.expect(salary).to.eql(salary_resp);\r",
							"});\r",
							"\r",
							"console.log(response.family);\r",
							"\r",
							"let start_salary = +requestData.salary;\r",
							"// console.log(\"ЗП со старта =\", start_salary);\r",
							"let salary_in_1_5_year = response.family.u_salary_1_5_year;\r",
							"// console.log(\"ЗП чрез полторашку =\", salary_in_1_5_year)\r",
							"\r",
							"pm.test(\"Check salary_in_1_5_year = 100 000\", function () {\r",
							"    pm.expect(salary_in_1_5_year).to.eql(start_salary * 4);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "дережобль",
							"type": "text"
						},
						{
							"key": "age",
							"value": "95",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "25000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// http://162.55.220.72:5005/object_info_3\r",
							"// 1. Отправить запрос.\r",
							"// 2. Статус код 200\r",
							"// 3. Спарсить response body в json.\r",
							"// 4. Спарсить request.\r",
							"// 5. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"// 6. Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"// 7. Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"// 8. Вывести в консоль параметр family из response.\r",
							"// 9. Проверить, что у параметра dog есть параметры name.\r",
							"// 10. Проверить, что у параметра dog есть параметры age.\r",
							"// 11. Проверить, что параметр name имеет значение Luky.\r",
							"// 12. Проверить, что параметр age имеет значение 4.\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const response = pm.response.json();\r",
							"const requestData = request.data;\r",
							"\r",
							"let reqName =  pm.request.url.query.get('name');\r",
							"let resName = response.name;\r",
							"\r",
							"pm.test(\"Check reqName = resName\", function () {\r",
							"    pm.expect(reqName).to.eql(resName);\r",
							"});\r",
							"\r",
							"let reqAge =  pm.request.url.query.get('age');\r",
							"let resAge = response.age;\r",
							"// console.log(\"age из запра =\",reqAge, \"age из ответа =\", resAge);\r",
							"\r",
							"pm.test(\"Check reqAge = resAge\", function () {\r",
							"    pm.expect(reqAge).to.eql(resAge);\r",
							"});\r",
							"\r",
							"let reqSalary =  +pm.request.url.query.get('salary');\r",
							"let resSalary = response.salary;\r",
							"//console.log(\"Salary из запра =\",reqSalary, \"Salary из ответа =\", resSalary);\r",
							"\r",
							"pm.test(\"Check reqSalary = resSalary\", function () {\r",
							"    pm.expect(reqSalary).to.eql(resSalary);\r",
							"});\r",
							"\r",
							"console.log(\"Familyreq =\",response.family)\r",
							"//9. Проверить, что у параметра dog есть параметры name.\r",
							"\r",
							"pm.test(\"Check Dog has name param\", function () {\r",
							"    pm.expect(response.family.pets.dog).to.have.property('name');\r",
							"});\r",
							"\r",
							"pm.test(\"Check Dog has age param\", function () {\r",
							"    pm.expect(response.family.pets.dog).to.have.property('age');\r",
							"});\r",
							"\r",
							"// 11. Проверить, что параметр name имеет значение Luky.\r",
							"pm.test(\"Check Dog's name is Luky\", function () {\r",
							"    pm.expect(response.family.pets.dog.name).to.eql('Luky');\r",
							"});\r",
							"\r",
							"pm.test(\"Check Dog's age is 4\", function () {\r",
							"    pm.expect(response.family.pets.dog.age).to.eql(4);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Kisulka&age=23&salary=26",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Kisulka"
						},
						{
							"key": "age",
							"value": "23"
						},
						{
							"key": "salary",
							"value": "26"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// http://162.55.220.72:5005/object_info_4\r",
							"// 1. Отправить запрос.\r",
							"// 2. Статус код 200\r",
							"// 3. Спарсить response body в json.\r",
							"// 4. Спарсить request.\r",
							"// 5. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"// 6. Проверить, что age в ответе равно age из request (age забрать из request.)\r",
							"// 7. Вывести в консоль параметр salary из request.\r",
							"// 8. Вывести в консоль параметр salary из response.\r",
							"// 9. Вывести в консоль 0-й элемент параметра salary из response.\r",
							"// 10. Вывести в консоль 1-й элемент параметра salary параметр salary из response.\r",
							"// 11. Вывести в консоль 2-й элемент параметра salary параметр salary из response.\r",
							"// 12. Проверить, что 0-й элемент параметра salary равен salary из request (salary забрать из request.)\r",
							"// 13. Проверить, что 1-й элемент параметра salary равен salary*2 из request (salary забрать из request.)\r",
							"// 14. Проверить, что 2-й элемент параметра salary равен salary*3 из request (salary забрать из request.)\r",
							"// 15. Создать в окружении переменную name\r",
							"// 16. Создать в окружении переменную age\r",
							"// 17. Создать в окружении переменную salary\r",
							"// 18. Передать в окружение переменную name\r",
							"// 19. Передать в окружение переменную age\r",
							"// 20. Передать в окружение переменную salary\r",
							"// 21. Написать цикл который выведет в консоль по порядку элементы списка из параметра salary.\r",
							"\r",
							"const schema = {\r",
							"    \"type\": \"object\",\r",
							"    \"properties\": {\r",
							"        \"age\": {\"type\": \"number\"},\r",
							"        \"name\": {\"type\": \"string\"},\r",
							"        \"salary\": {\"type\": \"array\"}\r",
							"    },\r",
							"    \"required\": [\"age\", \"name\", \"salary\"],\r",
							"    \"additionalProperties\": false \r",
							"};\r",
							"\r",
							"pm.test(\"Validate schema\", function () {\r",
							"    pm.response.to.have.jsonSchema(schema);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const requestdata = pm.request.data;\r",
							"const response = pm.response.json();\r",
							"console.log(request, response)\r",
							"\r",
							"let nameRequest = pm.request.url.query.get('name');\r",
							"let nameResponse = response.name;\r",
							"let ageRequest = +pm.request.url.query.get('age');\r",
							"let ageResponse = response.age;\r",
							"\r",
							"\r",
							"pm.test(\"Check nameRequest is the same as nameResponse\", function () {\r",
							"    pm.expect(nameRequest).to.eql(nameResponse);\r",
							"});\r",
							"\r",
							"pm.test(\"Check ageRequest is the same as ageResponse\", function () {\r",
							"    pm.expect(ageRequest).to.eql(ageResponse);\r",
							"});\r",
							"\r",
							"// console.log(pm.request.url.query.get('salary')) \r",
							"// console.log(response.salary)\r",
							"// console.log(response.salary[0])\r",
							"// console.log(response.salary[1]) \r",
							"// console.log(response.salary[2])\r",
							"\r",
							"pm.test(\"Check response.salary[0]) = RequestSalary\", function () {\r",
							"    pm.expect(response.salary[0]).to.eql(+pm.request.url.query.get('salary'));\r",
							"});\r",
							"\r",
							"pm.test(\"Check response.salary[1]) = RequestSalary * 2\", function () {\r",
							"    pm.expect(+response.salary[1]).to.eql(pm.request.url.query.get('salary')* 2);\r",
							"});\r",
							"\r",
							"// console.log(pm.request.url.query.get('salary') * 3)\r",
							"// console.log(+response.salary[2])\r",
							"\r",
							"pm.test(\"Check response.salary[2]) = RequestSalary * 3\", function () {\r",
							"    pm.expect(+response.salary[2]).to.eql(pm.request.url.query.get('salary')* 3);\r",
							"});\r",
							"\r",
							"pm.environment.set(\"name\", \"Boris\");\r",
							"pm.environment.set(\"age\", \"2\");\r",
							"pm.environment.set(\"salary\", \"450\");\r",
							"\r",
							"pm.environment.get(\"name\");\r",
							"pm.environment.get(\"age\");\r",
							"pm.environment.get(\"salary\");\r",
							"\r",
							"// Написать цикл который выведет в консоль по порядку элементы списка из параметра salary.\r",
							"\r",
							"response.salary.forEach(salary_list);\r",
							"function salary_list(array){\r",
							"    console.log(array)\r",
							"}\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Johnny&age=99&salary=4500",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Johnny"
						},
						{
							"key": "age",
							"value": "99"
						},
						{
							"key": "salary",
							"value": "4500"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// http://162.55.220.72:5005/user_info_2\r",
							"// 1. Вставить параметр salary из окружения в request\r",
							"// 2. Вставить параметр salary из окружения в age\r",
							"// 3. Вставить параметр salary из окружения в name\r",
							"// 4. Отправить запрос.\r",
							"// 5. Статус код 200\r",
							"// 6. Спарсить response body в json.\r",
							"// 7. Спарсить request.\r",
							"// 8. Проверить, что json response имеет параметр start_qa_salary\r",
							"// 9. Проверить, что json response имеет параметр qa_salary_after_6_months\r",
							"// 10. Проверить, что json response имеет параметр qa_salary_after_12_months\r",
							"// 11. Проверить, что json response имеет параметр qa_salary_after_1.5_year\r",
							"// 12. Проверить, что json response имеет параметр qa_salary_after_3.5_years\r",
							"// 13. Проверить, что json response имеет параметр person\r",
							"// 14. Проверить, что параметр start_qa_salary равен salary из request (salary забрать из request.)\r",
							"// 15. Проверить, что параметр qa_salary_after_6_months равен salary*2 из request (salary забрать из request.)\r",
							"// 16. Проверить, что параметр qa_salary_after_12_months равен salary*2.7 из request (salary забрать из request.)\r",
							"// 17. Проверить, что параметр qa_salary_after_1.5_year равен salary*3.3 из request (salary забрать из request.)\r",
							"// 18. Проверить, что параметр qa_salary_after_3.5_years равен salary*3.8 из request (salary забрать из request.)\r",
							"// 19. Проверить, что в параметре person, 1-й элемент из u_name равен salary из request (salary забрать из request.)\r",
							"// 20. Проверить, что что параметр u_age равен age из request (age забрать из request.)\r",
							"// 21. Проверить, что параметр u_salary_5_years равен salary*4.2 из request (salary забрать из request.)\r",
							"// 22. Написать цикл который выведет в консоль по порядку элементы списка из параметра person.\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let requestdata = request.data;\r",
							"let response = pm.response.json();\r",
							"\r",
							"// 8. Проверить, что json response имеет параметр start_qa_salary\r",
							"pm.test(\"Check response has start_qa_salary\", function () {\r",
							"    pm.expect(response).to.have.property('start_qa_salary');\r",
							"});\r",
							"//9. Проверить, что json response имеет параметр qa_salary_after_6_months\r",
							"pm.test(\"Check response has qa_salary_after_6_months\", function () {\r",
							"    pm.expect(response).to.have.property('qa_salary_after_6_months');\r",
							"});\r",
							"//10. Проверить, что json response имеет параметр qa_salary_after_12_months\r",
							"pm.test(\"Check response has qa_salary_after_12_months\", function () {\r",
							"    pm.expect(response).to.have.property('qa_salary_after_12_months');\r",
							"});\r",
							"\r",
							"//11. Проверить, что json response имеет параметр qa_salary_after_1.5_year\r",
							"pm.test(\"Check response has qa_salary_after_1.5_year\", function () {\r",
							"    pm.expect(response).to.have.property('qa_salary_after_1.5_year');\r",
							"});\r",
							"\r",
							"// 12. Проверить, что json response имеет параметр qa_salary_after_3.5_years\r",
							"pm.test(\"Check response has qa_salary_after_3.5_years\", function () {\r",
							"    pm.expect(response).to.have.property('qa_salary_after_3.5_years');\r",
							"});\r",
							"\r",
							"// 13. Проверить, что json response имеет параметр person\r",
							"pm.test(\"Check response has person\", function () {\r",
							"    pm.expect(response).to.have.property('person');\r",
							"});\r",
							"\r",
							"// 14. Проверить, что параметр start_qa_salary равен salary из request (salary забрать из request.)\r",
							"let start_qa_salary = response.start_qa_salary;\r",
							"const request_salary = +requestdata.salary;\r",
							"\r",
							"pm.test(\"Check salary из request = start_qa_salary из response\", function () {\r",
							"    pm.expect(request_salary).to.eql(start_qa_salary);\r",
							"});\r",
							"\r",
							"// 15. Проверить, что параметр qa_salary_after_6_months равен salary*2 из request (salary забрать из request.)\r",
							"let qa_salary_after_6_months = response.qa_salary_after_6_months;\r",
							"pm.test(\"Check salary х2 = qa_salary_after_6_months\", function () {\r",
							"    pm.expect(qa_salary_after_6_months).to.eql(request_salary * 2);\r",
							"});\r",
							"\r",
							"// 16. Проверить, что параметр qa_salary_after_12_months равен salary*2.7 из request (salary забрать из request.)\r",
							"let qa_salary_after_12_months = response.qa_salary_after_12_months;\r",
							"pm.test(\"Check salary х2.7 = qa_salary_after_12_months\", function () {\r",
							"    pm.expect(qa_salary_after_12_months).to.eql(request_salary * 2.7);\r",
							"});\r",
							"\r",
							"// 17. Проверить, что параметр qa_salary_after_1.5_year равен salary*3.3 из request (salary забрать из request.)\r",
							"let qa_salary_after_1_5_year = response[\"qa_salary_after_1.5_year\"];\r",
							"// console.log(qa_salary_after_1_5_year)\r",
							"pm.test(\"Check salary х3.3 = qa_salary_after_1_5_year\", function () {\r",
							"    pm.expect(qa_salary_after_1_5_year).to.eql(request_salary * 3.3);\r",
							"});\r",
							"\r",
							"// 18. Проверить, что параметр qa_salary_after_3.5_years равен salary*3.8 из request (salary забрать из request.)\r",
							"let qa_salary_after_3_5_years = response[\"qa_salary_after_3.5_years\"];\r",
							"// console.log(qa_salary_after_3_5_years)\r",
							"pm.test(\"Check salary х3.8 = qa_salary_after_3_5_years\", function () {\r",
							"    pm.expect(qa_salary_after_3_5_years).to.eql(request_salary * 3.8);\r",
							"});\r",
							"\r",
							"// 19. Проверить, что в параметре person, 1-й элемент из u_name равен salary из request (salary забрать из request.)\r",
							"let u_name_salary = response.person.u_name[1];\r",
							"pm.test(\"Check salary из request = u_name_salary\", function () {\r",
							"    pm.expect(u_name_salary).to.eql(request_salary);\r",
							"});\r",
							"\r",
							"// 20. Проверить, что что параметр u_age равен age из request (age забрать из request.)\r",
							"let response_u_age = response.person.u_age;\r",
							"let request_age = +requestdata.age;\r",
							"// console.log(u_salary_5_years)\r",
							"pm.test(\"Check request_age = response_u_age\", function () {\r",
							"    pm.expect(request_age).to.eql(response_u_age);\r",
							"});\r",
							"\r",
							"// 21. Проверить, что параметр u_salary_5_years равен salary*4.2 из request (salary забрать из request.)\r",
							"let u_salary_5_years = response.person.u_salary_5_years;\r",
							"pm.test(\"Check salary х4.2 = u_salary_5_years\", function () {\r",
							"    pm.expect(u_salary_5_years).to.eql(request_salary * 4.2);\r",
							"});\r",
							"\r",
							"// 22. Написать цикл который выведет в консоль по порядку элементы списка из параметра person.\r",
							"response.person.u_name.forEach(person_list);\r",
							"function person_list(array){\r",
							"    console.log(array)\r",
							"}\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Jack",
							"type": "text"
						},
						{
							"key": "age",
							"value": "45",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1500",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_2?",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_2"
					],
					"query": [
						{
							"key": "",
							"value": null
						}
					]
				}
			},
			"response": []
		}
	]
}